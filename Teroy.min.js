(function(){class e{constructor(e,t){if(this.element=document.querySelector(e),!this.element)throw`TEROY: ${e} not found.`;if(!t.render||"function"!=typeof t.render)throw"TEROY: No render() function found in component.";if("string"!=typeof t.render())throw"TEROY: Please make sure that the return from the render() function is wrapped in template literals (or any other string primitive).";this.html=t.render,this.rendered=!1,this.data=new Proxy(t.data||{},{component:this,set(e,t,r){return e[t]=r,this.component.update()},get(e,t){return this.component.proxyPaused||this.component.rendered&&window.requestAnimationFrame(()=>{this.component.update()}),e[t]}})}select(e){return this.element.querySelector(e)}selectAll(e){return this.element.querySelectorAll(e)}parse(e){return(new DOMParser).parseFromString(e,"text/html")}show(){if(this.rendered)return console.warn("TEROY: Component is already showing on page, no need to show it again.");this.DOM=this.parse(this.html()),Array.from(this.DOM.body.childNodes).forEach(e=>{this.element.appendChild(e)}),this.rendered=!0}update(){this.proxyPaused=!0,this.DOM=this.parse(this.html.apply(this));const e=Array.from(this.element.childNodes),t=Array.from(this.DOM.querySelector("body").childNodes);for(let r=0;r<maxLength;r++)e[r]?t[r]?t[r].outerHTML===e[r].outerHTML&&t[r].wholeText===e[r].wholeText||this.element.replaceChild(t[r],e[r]):this.element.removeChild(e[r]):this.element.appendChild(t[r]);delete this.proxyPaused}}"function"==typeof define&&define.amd?define((function(){return e})):"undefined"!=typeof module&&module.exports?module.exports=e:this.Teroy=e}).call(this);